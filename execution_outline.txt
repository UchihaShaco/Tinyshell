NOTE: Make EXIT_VAL the global variable. 
Everytime a cmd is executed the exit val can be updated
It is also possible not to do this, but this will make the code cleaner

Write exit function that takes care of exit vals and messages

PARSING
NOTE: Heredoc is initiated in parsing, not in execution

EXECUTE
If no commands
	return ;
else if one cmd and it's a builtin
	execute in parent
else
	create pipes (if applicable)
	create and run child
	create and run parent

CHILD PROCESS
1. open files
	check file permissions before opening any file
	input
		if no permission
			No such file or directory
			exit val: 1
	output
		if no permission
			Permission denied
		exit val: 1
2. pipe cmds/redirection (dup2)
	-do this first because there can be redirections only w/o args
3. close all opened files from redirection
4. close all pipes
5. If there are no arguments for execution
	exit(0);
6. Check arg for the following:
	-is it a builtin
		if yes -> execute builtin
	-if not, does it have a path separator (/)
		if yes -> use stat to check 
			directory or executable
			permissions
			if it is a directory
				Is a directory
				exit val: 126
			if executable
				execute
				exit val: 0
			if it doesn't exist 
				No such file or directory
				exit val: 127
		-if no -> find path using path variables
			if path is found
				execute
				exit val: 0
			if path not found
				command not found
				exit val: 127

